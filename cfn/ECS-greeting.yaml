AWSTemplateFormatVersion: "2010-09-09"
Description: Creates ECS cluster, task and service for greeting service

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  Cluster:
    Type: AWS::ECS::Cluster
  GreetingImage:
    Type: String
  PrivateSubnetIdA:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnetIdB:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetIdA:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetIdB:
    Type: AWS::EC2::Subnet::Id
  GreetingParamName:
    Type: String
  FontsizeParamName:
    Type: String
  TopicArn:
    Type: String
  ParamChangeNotificationProxyEndpoint:
    Type: String
  ServiceName:
    Type: String
  Prefix:
    Type: String

Outputs:
  ServiceDnsName:
    Description: DNS name for our service endpoint
    Value: !GetAtt ALB.DNSName

Resources:

# Set up ECS Task definition

  GreetingTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        -
          PolicyName: "GreetingTaskPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "ssm:GetParameters"
                Resource: "*"

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  GreetingTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ContainerDefinitions: 
        - Name: !Sub ${Prefix}-GreetingContainer
          Image: !Ref GreetingImage
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: greeting
              awslogs-region: eu-west-1
              awslogs-stream-prefix: !Ref Prefix
          PortMappings:
            - ContainerPort: 8080
          Environment:
            - Name: GREETING_PARAM_NAME
              Value: !Ref GreetingParamName
            - Name: FONTSIZE_PARAM_NAME
              Value: !Ref FontsizeParamName
            - Name: PARAM_CHANGE_TOPIC_ARN
              Value: !Ref TopicArn
            - Name: PARAM_CHANGE_SNS_ENDPOINT
              Value: !Ref ParamChangeNotificationProxyEndpoint
      Cpu: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      Family: !Sub ${Prefix}-GreetingTaskDefinition
      Memory: 2048
      NetworkMode: awsvpc
      RequiresCompatibilities: 
        - FARGATE
      TaskRoleArn: !Ref GreetingTaskRole

# Greeting service ALB

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Greeting ALB Security Group
      GroupName: Greeting ALB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId

  TaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Greeting Task Security Group
      GroupName: Greeting Task Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId
      VpcId: !Ref VpcId

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub ${Prefix}-GreetingALB
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref PublicSubnetIdA
        - !Ref PublicSubnetIdB
      Type: application

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref ALBTargetGroup

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /config
      HealthCheckPort: 8080
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Matcher: 
        HttpCode: 200
      Name: !Sub ${Prefix}-GreetingTargetGroup
      Port: 8080
      Protocol: HTTP
      TargetGroupAttributes: 
        - Key: deregistration_delay.timeout_seconds
          Value: 300
        - Key: slow_start.duration_seconds
          Value: 0
        - Key: stickiness.enabled
          Value: false
      TargetType: ip
      VpcId: !Ref VpcId

  GreetingService:
    Type: AWS::ECS::Service
    DependsOn: ALB
    Properties:
      Cluster: !Ref Cluster
      DeploymentConfiguration: 
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 2
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 10
      LaunchType: FARGATE
      LoadBalancers: 
        - ContainerName: !Sub ${Prefix}-GreetingContainer
          ContainerPort: 8080
          TargetGroupArn: !Ref ALBTargetGroup
      NetworkConfiguration: 
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref TaskSecurityGroup
          Subnets:
            - !Ref PrivateSubnetIdA
            - !Ref PrivateSubnetIdB
      SchedulingStrategy: REPLICA
      ServiceName: !Sub ${Prefix}-${ServiceName}
      TaskDefinition: !Ref GreetingTaskDefinition


